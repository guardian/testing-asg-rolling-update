// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The BasicAsgRollingUpdate stack matches the snapshot 1`] = `
{
  "Metadata": {
    "gu:cdk:constructs": [
      "GuVpcParameter",
      "GuSubnetListParameter",
      "GuSubnetListParameter",
      "GuEc2AppExperimental",
      "GuDistributionBucketParameter",
      "GuCertificate",
      "GuInstanceRole",
      "GuSsmSshPolicy",
      "GuDescribeEC2Policy",
      "GuLoggingStreamNameParameter",
      "GuLogShippingPolicy",
      "GuGetDistributablePolicy",
      "GuParameterStoreReadPolicy",
      "GuAmiParameter",
      "GuHttpsEgressSecurityGroup",
      "GuWazuhAccess",
      "GuAutoScalingGroup",
      "GuApplicationLoadBalancer",
      "GuApplicationTargetGroup",
      "GuHttpsApplicationListener",
      "GuCname",
    ],
    "gu:cdk:version": "TEST",
  },
  "Outputs": {
    "LoadBalancerBasicDnsName": {
      "Description": "DNS entry for LoadBalancerBasic",
      "Value": {
        "Fn::GetAtt": [
          "LoadBalancerBasic0263A664",
          "DNSName",
        ],
      },
    },
  },
  "Parameters": {
    "AMIBasic": {
      "Description": "Amazon Machine Image ID for the app basic. Use this in conjunction with AMIgo to keep AMIs up to date.",
      "Type": "AWS::EC2::Image::Id",
    },
    "DistributionBucketName": {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "LoggingStreamName": {
      "Default": "/account/services/logging.stream.name",
      "Description": "SSM parameter containing the Name (not ARN) on the kinesis stream",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "VpcId": {
      "Default": "/account/vpc/primary/id",
      "Description": "Virtual Private Cloud to run EC2 instances within. Should NOT be the account default VPC.",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>",
    },
    "basicPrivateSubnets": {
      "Default": "/account/vpc/primary/subnets/private",
      "Description": "A list of private subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "basicPublicSubnets": {
      "Default": "/account/vpc/primary/subnets/public",
      "Description": "A list of public subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
  },
  "Resources": {
    "AsgRollingUpdatePolicy2A1DDC6F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cloudformation:SignalResource",
              "Effect": "Allow",
              "Resource": {
                "Ref": "AWS::StackId",
              },
            },
            {
              "Action": "elasticloadbalancing:DescribeTargetHealth",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AsgRollingUpdatePolicy2A1DDC6F",
        "Roles": [
          {
            "Ref": "InstanceRoleBasicC6212E32",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AutoScalingGroupBasicASG7A1B705E": {
      "CreationPolicy": {
        "AutoScalingCreationPolicy": {
          "MinSuccessfulInstancesPercent": 100,
        },
        "ResourceSignal": {
          "Count": 3,
          "Timeout": "PT5M",
        },
      },
      "Properties": {
        "DesiredCapacity": "3",
        "HealthCheckGracePeriod": 120,
        "HealthCheckType": "ELB",
        "LaunchTemplate": {
          "LaunchTemplateId": {
            "Ref": "playgroundCODEbasic5A2FE87E",
          },
          "Version": {
            "Fn::GetAtt": [
              "playgroundCODEbasic5A2FE87E",
              "LatestVersionNumber",
            ],
          },
        },
        "MaxSize": "6",
        "MetricsCollection": [
          {
            "Granularity": "1Minute",
          },
        ],
        "MinSize": "3",
        "Tags": [
          {
            "Key": "App",
            "PropagateAtLaunch": true,
            "Value": "basic",
          },
          {
            "Key": "gu:cdk:version",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "PropagateAtLaunch": true,
            "Value": "guardian/testing-asg-rolling-update",
          },
          {
            "Key": "LogKinesisStreamName",
            "PropagateAtLaunch": true,
            "Value": {
              "Ref": "LoggingStreamName",
            },
          },
          {
            "Key": "Stack",
            "PropagateAtLaunch": true,
            "Value": "playground",
          },
          {
            "Key": "Stage",
            "PropagateAtLaunch": true,
            "Value": "CODE",
          },
          {
            "Key": "SystemdUnit",
            "PropagateAtLaunch": true,
            "Value": "testing-asg-rolling-update.service",
          },
        ],
        "TargetGroupARNs": [
          {
            "Ref": "TargetGroupBasicC882006F",
          },
        ],
        "VPCZoneIdentifier": {
          "Ref": "basicPrivateSubnets",
        },
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MaxBatchSize": 6,
          "MinInstancesInService": 3,
          "MinSuccessfulInstancesPercent": 100,
          "PauseTime": "PT5M",
          "SuspendProcesses": [
            "AlarmNotification",
          ],
          "WaitOnResourceSignals": true,
        },
      },
    },
    "CertificateBasicB449389E": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "DomainName": "basic.rolling-update.gutools.co.uk",
        "Tags": [
          {
            "Key": "App",
            "Value": "basic",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/testing-asg-rolling-update",
          },
          {
            "Key": "Name",
            "Value": "basic/CertificateBasic",
          },
          {
            "Key": "Stack",
            "Value": "playground",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
        "ValidationMethod": "DNS",
      },
      "Type": "AWS::CertificateManager::Certificate",
      "UpdateReplacePolicy": "Retain",
    },
    "DNS": {
      "Properties": {
        "Name": "basic.rolling-update.gutools.co.uk",
        "RecordType": "CNAME",
        "ResourceRecords": [
          {
            "Fn::GetAtt": [
              "LoadBalancerBasic0263A664",
              "DNSName",
            ],
          },
        ],
        "Stage": "CODE",
        "TTL": 3600,
      },
      "Type": "Guardian::DNS::RecordSet",
    },
    "DescribeEC2PolicyFF5F9295": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeAutoScalingGroups",
                "ec2:DescribeTags",
                "ec2:DescribeInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "describe-ec2-policy",
        "Roles": [
          {
            "Ref": "InstanceRoleBasicC6212E32",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetDistributablePolicyBasic1F2B1B4C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "DistributionBucketName",
                    },
                    "/playground/CODE/basic/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetDistributablePolicyBasic1F2B1B4C",
        "Roles": [
          {
            "Ref": "InstanceRoleBasicC6212E32",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GuHttpsEgressSecurityGroupBasicCF8196C0": {
      "Properties": {
        "GroupDescription": "Allow all outbound HTTPS traffic",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound HTTPS traffic",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "basic",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/testing-asg-rolling-update",
          },
          {
            "Key": "Stack",
            "Value": "playground",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GuHttpsEgressSecurityGroupBasicfrombasicLoadBalancerBasicSecurityGroupB4B6F83E9000A78A1EC4": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupBasicCF8196C0",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LoadBalancerBasicSecurityGroup8F198845",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GuLogShippingPolicy981BFE5A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:kinesis:eu-west-1:",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GuLogShippingPolicy981BFE5A",
        "Roles": [
          {
            "Ref": "InstanceRoleBasicC6212E32",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "InstanceRoleBasicC6212E32": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Tags": [
          {
            "Key": "App",
            "Value": "basic",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/testing-asg-rolling-update",
          },
          {
            "Key": "Stack",
            "Value": "playground",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ListenerBasic17648D88": {
      "Properties": {
        "Certificates": [
          {
            "CertificateArn": {
              "Ref": "CertificateBasicB449389E",
            },
          },
        ],
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "TargetGroupBasicC882006F",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "LoadBalancerBasic0263A664",
        },
        "Port": 443,
        "Protocol": "HTTPS",
        "SslPolicy": "ELBSecurityPolicy-TLS13-1-2-2021-06",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LoadBalancerBasic0263A664": {
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "true",
          },
          {
            "Key": "routing.http.x_amzn_tls_version_and_cipher_suite.enabled",
            "Value": "true",
          },
          {
            "Key": "routing.http.drop_invalid_header_fields.enabled",
            "Value": "true",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "LoadBalancerBasicSecurityGroup8F198845",
              "GroupId",
            ],
          },
        ],
        "Subnets": {
          "Ref": "basicPublicSubnets",
        },
        "Tags": [
          {
            "Key": "App",
            "Value": "basic",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/testing-asg-rolling-update",
          },
          {
            "Key": "Stack",
            "Value": "playground",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "LoadBalancerBasicSecurityGroup8F198845": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB basicLoadBalancerBasicDA0EF048",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "basic",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/testing-asg-rolling-update",
          },
          {
            "Key": "Stack",
            "Value": "playground",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LoadBalancerBasicSecurityGrouptobasicGuHttpsEgressSecurityGroupBasic7202EAE3900097165241": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupBasicCF8196C0",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "LoadBalancerBasicSecurityGroup8F198845",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "LoadBalancerBasicSecurityGrouptobasicWazuhSecurityGroupD868434790004F22F18C": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "WazuhSecurityGroup",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "LoadBalancerBasicSecurityGroup8F198845",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ParameterStoreReadBasic0B1BF42E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:eu-west-1:",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/CODE/playground/basic",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:eu-west-1:",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/CODE/playground/basic/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "parameter-store-read-policy",
        "Roles": [
          {
            "Ref": "InstanceRoleBasicC6212E32",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SsmSshPolicy4CFC977E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2messages:AcknowledgeMessage",
                "ec2messages:DeleteMessage",
                "ec2messages:FailMessage",
                "ec2messages:GetEndpoint",
                "ec2messages:GetMessages",
                "ec2messages:SendReply",
                "ssm:UpdateInstanceInformation",
                "ssm:ListInstanceAssociations",
                "ssm:DescribeInstanceProperties",
                "ssm:DescribeDocumentParameters",
                "ssmmessages:CreateControlChannel",
                "ssmmessages:CreateDataChannel",
                "ssmmessages:OpenControlChannel",
                "ssmmessages:OpenDataChannel",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ssm-ssh-policy",
        "Roles": [
          {
            "Ref": "InstanceRoleBasicC6212E32",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TargetGroupBasicC882006F": {
      "Properties": {
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/healthcheck",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 5,
        "Port": 9000,
        "Protocol": "HTTP",
        "Tags": [
          {
            "Key": "App",
            "Value": "basic",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/testing-asg-rolling-update",
          },
          {
            "Key": "Stack",
            "Value": "playground",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "WazuhSecurityGroup": {
      "Properties": {
        "GroupDescription": "Allow outbound traffic from wazuh agent to manager",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh event logging",
            "FromPort": 1514,
            "IpProtocol": "tcp",
            "ToPort": 1514,
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh agent registration",
            "FromPort": 1515,
            "IpProtocol": "tcp",
            "ToPort": 1515,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "basic",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/testing-asg-rolling-update",
          },
          {
            "Key": "Stack",
            "Value": "playground",
          },
          {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
        "VpcId": {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "WazuhSecurityGroupfrombasicLoadBalancerBasicSecurityGroupB4B6F83E90003F093FE0": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "WazuhSecurityGroup",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LoadBalancerBasicSecurityGroup8F198845",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "playgroundCODEbasic5A2FE87E": {
      "DependsOn": [
        "InstanceRoleBasicC6212E32",
      ],
      "Properties": {
        "LaunchTemplateData": {
          "IamInstanceProfile": {
            "Arn": {
              "Fn::GetAtt": [
                "playgroundCODEbasicProfile8CF3B60A",
                "Arn",
              ],
            },
          },
          "ImageId": {
            "Ref": "AMIBasic",
          },
          "InstanceType": "t4g.micro",
          "MetadataOptions": {
            "HttpTokens": "required",
            "InstanceMetadataTags": "enabled",
          },
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "GuHttpsEgressSecurityGroupBasicCF8196C0",
                "GroupId",
              ],
            },
            {
              "Fn::GetAtt": [
                "WazuhSecurityGroup",
                "GroupId",
              ],
            },
          ],
          "TagSpecifications": [
            {
              "ResourceType": "instance",
              "Tags": [
                {
                  "Key": "App",
                  "Value": "basic",
                },
                {
                  "Key": "gu:cdk:version",
                  "Value": "TEST",
                },
                {
                  "Key": "gu:repo",
                  "Value": "guardian/testing-asg-rolling-update",
                },
                {
                  "Key": "Name",
                  "Value": "basic/playground-CODE-basic",
                },
                {
                  "Key": "Stack",
                  "Value": "playground",
                },
                {
                  "Key": "Stage",
                  "Value": "CODE",
                },
              ],
            },
            {
              "ResourceType": "volume",
              "Tags": [
                {
                  "Key": "App",
                  "Value": "basic",
                },
                {
                  "Key": "gu:cdk:version",
                  "Value": "TEST",
                },
                {
                  "Key": "gu:repo",
                  "Value": "guardian/testing-asg-rolling-update",
                },
                {
                  "Key": "Name",
                  "Value": "basic/playground-CODE-basic",
                },
                {
                  "Key": "Stack",
                  "Value": "playground",
                },
                {
                  "Key": "Stage",
                  "Value": "CODE",
                },
              ],
            },
          ],
          "UserData": {
            "Fn::Base64": {
              "Fn::Join": [
                "",
                [
                  "#!/bin/bash
function exitTrap(){
exitCode=$?

        cfn-signal --stack ",
                  {
                    "Ref": "AWS::StackId",
                  },
                  "           --resource AutoScalingGroupBasicASG7A1B705E           --region eu-west-1           --exit-code $exitCode || echo 'Failed to send Cloudformation Signal'
        
}
trap exitTrap EXIT
mkdir -p $(dirname '/basic/testing-asg-rolling-update_ABC.deb')
aws s3 cp 's3://",
                  {
                    "Ref": "DistributionBucketName",
                  },
                  "/playground/CODE/basic/testing-asg-rolling-update_ABC.deb' '/basic/testing-asg-rolling-update_ABC.deb'
dpkg -i /basic/testing-asg-rolling-update_ABC.deb
# GuEc2AppExperimental UserData Start

      TOKEN=$(curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600")
      INSTANCE_ID=$(curl -H "X-aws-ec2-metadata-token: $TOKEN" "http://169.254.169.254/latest/meta-data/instance-id")

      STATE=$(aws elbv2 describe-target-health         --target-group-arn ",
                  {
                    "Ref": "TargetGroupBasicC882006F",
                  },
                  "         --region eu-west-1         --targets Id=$INSTANCE_ID,Port=9000         --query "TargetHealthDescriptions[0].TargetHealth.State")

      until [ "$STATE" == "\\"healthy\\"" ]; do
        echo "Instance not yet healthy within target group. Current state $STATE. Sleeping..."
        sleep 5
        STATE=$(aws elbv2 describe-target-health           --target-group-arn ",
                  {
                    "Ref": "TargetGroupBasicC882006F",
                  },
                  "           --region eu-west-1           --targets Id=$INSTANCE_ID,Port=9000           --query "TargetHealthDescriptions[0].TargetHealth.State")
      done

      echo "Instance is healthy in target group."
      
# GuEc2AppExperimental UserData End",
                ],
              ],
            },
          },
        },
        "TagSpecifications": [
          {
            "ResourceType": "launch-template",
            "Tags": [
              {
                "Key": "App",
                "Value": "basic",
              },
              {
                "Key": "gu:cdk:version",
                "Value": "TEST",
              },
              {
                "Key": "gu:repo",
                "Value": "guardian/testing-asg-rolling-update",
              },
              {
                "Key": "Name",
                "Value": "basic/playground-CODE-basic",
              },
              {
                "Key": "Stack",
                "Value": "playground",
              },
              {
                "Key": "Stage",
                "Value": "CODE",
              },
            ],
          },
        ],
      },
      "Type": "AWS::EC2::LaunchTemplate",
    },
    "playgroundCODEbasicProfile8CF3B60A": {
      "Properties": {
        "Roles": [
          {
            "Ref": "InstanceRoleBasicC6212E32",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
  },
}
`;
